extends AppliedEffect

var turns: int = 0

var weakening: int = 0

## Called when the effect is applied to a unit.
func _apply_effect(params: Variant) -> void:
	if params is Array:
		if params.size() == 2:
			turns = params[0]
			weakening = params[1]
		else:
			print_debug("Invalid number parameter for a 'vulnerability' effect. Expected 2, found %d!" % params.size())
	else:
		print_debug("Invalid parameter for a 'vulnerability' effect. Expected array, found %s!" % type_string(typeof(params)))
	
	if turns <= 0:
		lift_effect()
		return
	
	target_unit.parameters.add_modifier(
			"armor",
			self,
			func(armor: int):
				return armor - weakening
	)
